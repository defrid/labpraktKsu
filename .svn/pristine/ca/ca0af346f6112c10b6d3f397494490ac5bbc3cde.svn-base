/**
 * Created by vyacheslav.rybnikov on 09.10.2014.
 */
(function() {
    var app = angular.module('edm');

    console.log('fileUploadEvent set');

    app.controller('fileUploadCtrl', function($scope, $http, $timeout) {

        var uploadScope = null;

        $scope.uploadComplete = function(content) {
            $scope.content = content;
            $scope.contentHide = false;
            $scope.isLoading = false;
            $scope.clearFiles();

        };

        function updateProgress(data) {
            $scope.clientProgress = data;
        };

        function getProgress(start, callback) {
            $http.get(start ? ($scope.localref + '/fileprogress?a=start') :
                ($scope.localref + '/fileprogress'))
                .success(callback)
                .error(callback);
        };

        var timeoutPromise = null;
        var timeoutVal = 250;
        var timeoutCounter = 5000 / timeoutVal;

        function timeoutFunction(data, status) {
            // console.log('status: ' + status);
            status = status || 200;
            status = (status >= 200 || status < 400) ? true : false;
            $scope.clientProgress = data;
            if (status && ($scope.clientProgress.value < $scope.clientProgress.maxval ||
              (!$scope.clientProgress.maxval && timeoutCounter--))) {
              // run again;
              console.log('Timer started');
              timeoutPromise = $timeout(function() {
                getProgress(false, timeoutFunction)
              }, timeoutVal);
            } else {
              timeoutPromise = null;
              console.log('Timer stopped');
            }
        };

        $scope.mySubmit = function() {
            uploadScope = TS.fileUploadEvent($scope.getFileSize());
            $scope.clientProgress.value = $scope.clientProgress.maxval = 0;
            timeoutCounter = 5000 / timeoutVal;
            $scope.content = null;
            $scope.progressHide = false;
            $scope.contentHide = true;
            $scope.isLoading = true;
            getProgress(true, timeoutFunction);
        };

        // first of all, we need to initialize client (to let server know us by
        // setting cookie);
        getProgress(true, updateProgress);

        $scope.$on('$destroy', function() {
            if (timeoutPromise) $timeout.cancel(timeoutPromise);
        });

        $scope.isLoading = false;
        $scope.progressHide = true;
        $scope.contentHide = true;
        $scope.uploadLink = $scope.localref + '/fileupload';

        console.log('file-upload.js:localref:' + $scope.localref);
    });

    app.directive('myFileDisplay', function() {

        function link(scope, element, attrs) {

          scope.clearFiles = function() {
              /* console.log(attrs);
               console.log(element);
               console.log(element.val()); */
              element.val('');
              // alert(JSON.stringify(attrs));
              // element.value = attrs;
          };

          scope.getFileSize = function() {
              console.log('size: ' + element[0].files[0].size);
              return element[0].files[0].size;
          };

          /* var format,
           timeoutId;

           function updateTime() {
           element.text(dateFilter(new Date(), format));
           }

           scope.$watch(attrs.myCurrentTime, function(value) {
           format = value;
           updateTime();
           });

           element.on('$destroy', function() {
           $interval.cancel(timeoutId);
           });

           // start the UI update process; save the timeoutId for canceling
           timeoutId = $interval(function() {
           updateTime(); // update DOM
           }, 1000); */
        }

        return {
            link: link
    }});
})();