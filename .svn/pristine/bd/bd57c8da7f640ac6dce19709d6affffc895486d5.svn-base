(function () {
    function getLastPathElement(path) {
        return path.substr(path.lastIndexOf('/'));
    };

    var app = angular.module('edm');

    app.controller('parserCfgCtrl', function($scope, $http, $location) {
        $scope.isLoading = true;
        $scope.isUpdating = false;
        $scope.localref = getLastPathElement($location.path());
		
		$scope.gateways = [
			{ name: 'HTTP', configUrl: '/templ/config/gateway/http', configValue: 'Rd.Gateway.Http' },
			{ name: 'Other', configUrl: '/templ/config/gateway', configValue: 'none' },
		];

		$scope.connectors = [
			{ name: 'CSV', configUrl: '/templ/config/connector/csv', configValue: 'Rd.Connector.Csv' },
			{ name: 'Other', configUrl: '/templ/config/connector', configValue: 'none' },
		];
        
        $scope.$watch('master.Value.GatewayName', function(newValue, oldValue, scope) {
            var result = null;
            scope.gateways.forEach(function(probe) {
                if (probe.configValue == newValue) {
                    result = probe;
                }
            });
            scope.gateway = result;
        });

        $scope.$watch('gateway', function(newValue, oldValue, scope) {
            if (scope.master !== undefined) {
                scope.master.Value.GatewayName = newValue !== undefined
                    ? newValue.configValue : undefined;
            }
        });

        $scope.$watch('master.Value.ConnectorName', function(newValue, oldValue, scope) {
            var result = null;
            scope.connectors.forEach(function(probe) {
                if (probe.configValue == newValue) {
                    result = probe;
                }
            });
            scope.connector = result;
        });

        $scope.$watch('connector', function(newValue, oldValue, scope) {
            if (scope.master !== undefined) {
                scope.master.Value.ConnectorName = newValue !== undefined
                    ? newValue.configValue : undefined;
            }
        });
        
        // OK this is a hack because we don't have the
        // master slave queries working (everything is off the connector
        // config).
        $scope.master = $scope.master || {};
        $scope.master.Value = $scope.master.Value || {};
        $scope.master.Value.GatewayName = $scope.master.Value.GatewayName || 'Rd.Gateway.Http';
        $scope.master.Value.ConnectorName = $scope.master.Value.ConnectorName || 'Rd.Connector.Csv';
 
        $http.get($scope.localref + '/get'
        ).success(function(data) {
                $scope.data = data[0];

                if (!$scope.data.Tags) {
                    $scope.data.Tags = [];
                }

                $scope.isLoading = false;
        }).error(function(data) {
                try {
                    data = JSON.stringify(data);
                } catch (e) {
                    console.log("Unable to decode response JSON");
                }
                alert(data);
                $scope.isLoading = false;
        });

        $scope.updateCfg = function() {
            $scope.isUpdating = true;
            $http({
                method : 'POST',
                url : $scope.localref + '/set',
                data : $scope.data,
                headers : {
                    'Connection': 'close',
                    "Content-Type": "application/json"
                }
            }).success(function(data) {
                try {
                    data = JSON.stringify(data);
                } catch (e) {
                    console.log("Unable to decode response JSON");
                }
                if (data.length <= 2) {
                    data = "Saved!";
                }
                alert(data);
                $scope.isUpdating = false;
            }).error(function(data) {
                try {
                    data = JSON.stringify(data);
                } catch (e) {
                    console.log("Unable to decode response JSON");
                }
                alert(data);
                $scope.isUpdating = false;
            });
        }
    })
})();